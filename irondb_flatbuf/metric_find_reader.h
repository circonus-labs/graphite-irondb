#ifndef METRIC_FIND_READER_H
#define METRIC_FIND_READER_H

/* Generated by flatcc 0.4.3 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#define PDIAGNOSTIC_IGNORE_UNUSED
#include "flatcc/portable/pdiagnostic_push.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct metrics_LeafData_table *metrics_LeafData_table_t;
typedef const flatbuffers_uoffset_t *metrics_LeafData_vec_t;
typedef flatbuffers_uoffset_t *metrics_LeafData_mutable_vec_t;
typedef const struct metrics_MetricSearchResult_table *metrics_MetricSearchResult_table_t;
typedef const flatbuffers_uoffset_t *metrics_MetricSearchResult_vec_t;
typedef flatbuffers_uoffset_t *metrics_MetricSearchResult_mutable_vec_t;
typedef const struct metrics_MetricSearchResultList_table *metrics_MetricSearchResultList_table_t;
typedef const flatbuffers_uoffset_t *metrics_MetricSearchResultList_vec_t;
typedef flatbuffers_uoffset_t *metrics_MetricSearchResultList_mutable_vec_t;



struct metrics_LeafData_table { uint8_t unused__; };

#ifndef metrics_LeafData_identifier
#define metrics_LeafData_identifier flatbuffers_identifier
#endif
#define metrics_LeafData_type_hash ((flatbuffers_thash_t)0xd1d04250)
#define metrics_LeafData_type_identifier "\x50\x42\xd0\xd1"
static inline size_t metrics_LeafData_vec_len(metrics_LeafData_vec_t vec)
__flatbuffers_vec_len(vec)
static inline metrics_LeafData_table_t metrics_LeafData_vec_at(metrics_LeafData_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(metrics_LeafData_table_t, vec, i, 0)
__flatbuffers_table_as_root(metrics_LeafData)

__flatbuffers_define_string_field(0, metrics_LeafData, uuid, 0)
__flatbuffers_define_string_field(1, metrics_LeafData, check_name, 0)
__flatbuffers_define_string_field(2, metrics_LeafData, metric_name, 0)
__flatbuffers_define_string_field(3, metrics_LeafData, category, 0)
__flatbuffers_define_string_field(4, metrics_LeafData, egress_function, 0)

struct metrics_MetricSearchResult_table { uint8_t unused__; };

#ifndef metrics_MetricSearchResult_identifier
#define metrics_MetricSearchResult_identifier flatbuffers_identifier
#endif
#define metrics_MetricSearchResult_type_hash ((flatbuffers_thash_t)0x31e529a9)
#define metrics_MetricSearchResult_type_identifier "\xa9\x29\xe5\x31"
static inline size_t metrics_MetricSearchResult_vec_len(metrics_MetricSearchResult_vec_t vec)
__flatbuffers_vec_len(vec)
static inline metrics_MetricSearchResult_table_t metrics_MetricSearchResult_vec_at(metrics_MetricSearchResult_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(metrics_MetricSearchResult_table_t, vec, i, 0)
__flatbuffers_table_as_root(metrics_MetricSearchResult)

__flatbuffers_define_scalar_field(0, metrics_MetricSearchResult, leaf, flatbuffers_int8, int8_t, INT8_C(0))
__flatbuffers_define_string_field(1, metrics_MetricSearchResult, name, 0)
__flatbuffers_define_table_field(2, metrics_MetricSearchResult, leaf_data, metrics_LeafData_table_t, 0)

struct metrics_MetricSearchResultList_table { uint8_t unused__; };

#ifndef metrics_MetricSearchResultList_identifier
#define metrics_MetricSearchResultList_identifier flatbuffers_identifier
#endif
#define metrics_MetricSearchResultList_type_hash ((flatbuffers_thash_t)0x1ab8c955)
#define metrics_MetricSearchResultList_type_identifier "\x55\xc9\xb8\x1a"
static inline size_t metrics_MetricSearchResultList_vec_len(metrics_MetricSearchResultList_vec_t vec)
__flatbuffers_vec_len(vec)
static inline metrics_MetricSearchResultList_table_t metrics_MetricSearchResultList_vec_at(metrics_MetricSearchResultList_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(metrics_MetricSearchResultList_table_t, vec, i, 0)
__flatbuffers_table_as_root(metrics_MetricSearchResultList)

__flatbuffers_define_vector_field(0, metrics_MetricSearchResultList, results, metrics_MetricSearchResult_vec_t, 0)

#include "flatcc/portable/pdiagnostic_pop.h"
#endif /* METRIC_FIND_READER_H */
